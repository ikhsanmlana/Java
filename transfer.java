
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ikhsan M
 */
public class transfer extends javax.swing.JFrame {

    /**
     * Creates new form transfer
     */
    public transfer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_Amount = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_CN = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel_Amount1 = new javax.swing.JLabel();
        jTextField_Amount = new javax.swing.JTextField();
        jPasswordField_pw = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jButton_Enter = new javax.swing.JButton();
        jButton_Cancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Amount.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel_Amount.setText("Amount");

        jPanel3.setBackground(new java.awt.Color(58, 83, 155));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BALANCE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTextField_CN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_CNActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel6.setText("Card Number");

        jLabel_Amount1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel_Amount1.setText("Password");

        jTextField_Amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_AmountActionPerformed(evt);
            }
        });

        jPasswordField_pw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_pwActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(58, 83, 155));
        jLabel3.setText("TRANSFER TO:");

        jButton_Enter.setBackground(new java.awt.Color(34, 167, 240));
        jButton_Enter.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_Enter.setText("TRANSFER");
        jButton_Enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_EnterMouseClicked(evt);
            }
        });
        jButton_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EnterActionPerformed(evt);
            }
        });

        jButton_Cancel.setBackground(new java.awt.Color(192, 57, 43));
        jButton_Cancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_Cancel.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Cancel.setText("CANCEL");
        jButton_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_CancelMouseClicked(evt);
            }
        });
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_Amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_CN, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_Amount1)
                        .addGap(43, 43, 43)
                        .addComponent(jPasswordField_pw))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton_Enter, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(271, 271, 271))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_CN, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Amount1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField_pw, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Enter, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 410, 410));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Ikhsan M\\Pictures\\blue.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_CNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_CNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_CNActionPerformed

    private void jTextField_AmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_AmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_AmountActionPerformed

    private void jButton_EnterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_EnterMouseClicked
        // TODO add your handling code here:
        LogIn li = new LogIn();  
        
        PreparedStatement ps, ps1, ps2,ps3,ps4; 
        ResultSet rs, rs1, rs2,rs3,rs5; 
         
        
        String uname = li.jTextField_UN.getText();  
        String pass = String.valueOf(jPasswordField_pw.getPassword());
        
        String query = "SELECT * FROM users WHERE uname = ? and pass = ?"; 
        String query1 = "UPDATE `savings` SET `balance`=? WHERE `cardnumber`=?"; 
        String query2 = "SELECT * FROM savings WHERE cardnumber = ?";  
        String query3 = "INSERT INTO `history`(`sender`, `receiver`, `amount`) VALUES (?,?,?)"; 
        try {
            ps = MyConnection.getConnection().prepareStatement(query); 
            
            ps.setString(1, jLabel2.getText());  
            ps.setString(2, pass);
        
            // Gets the cardnumber that is associated with the user's username by connecting to the Users table database
            rs = ps.executeQuery(); 
            if(rs.next()){ // Validation to check if the password entered by the user is correct
                int balance;
                String cardnum_receiver = jTextField_CN.getText(); // The receiver or the card number that the user is sending to
                String cardnum_sender = rs.getString(1);  
                // The user that is making the transfer is the sender, so the card number could be obtained by connecting to the Users table database by the executed query
                if(cardnum_receiver.equals(cardnum_sender)){
                    JOptionPane.showMessageDialog(null, "Please enter a correct card number");
                    return;
                    // A validation for which when the user enters its own card number by mistake
                } 
                try{ 
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/internetbanking","root","");
                
                    try (PreparedStatement checkAccountExists = con.prepareStatement("SELECT 1 FROM users WHERE cardnumber = ?")) {
                        checkAccountExists.setString(1, cardnum_receiver); // A validation to check whether the card number exists in the database or not
                        try(ResultSet rs4 = checkAccountExists.executeQuery()){ 
                            if(rs4.next()){ // If the card number exist in the database
                                try {
                                    ps2 = MyConnection.getConnection().prepareStatement(query2); 
                                    // Creates a connection to the Savings table database to obtain the account's balance by using the user's card number
                                    ps2.setString(1, cardnum_sender); 
                                    // Executes the query by passing the value of the user's cardnumber to get the balance
                                    rs2 = ps2.executeQuery();
                                    if(rs2.next()){
                                        balance = rs2.getInt(2); 
                                        // Gets the user's account balance
                                        int amount = Integer.parseInt(jTextField_Amount.getText()); // Converts the string value of the amount that the user entered to integer
                                        int sender_balance = balance - amount; // Updates the balance of the user 

                                        if(amount > balance){
                                            // Validation for when the amount entered by the user exceeds their account balance
                                            JOptionPane.showMessageDialog(null, "Amount exceeded balance."); 
                                            return;
                                        } 
                                        try {
                                            ps2.setString(1, cardnum_receiver); 
                                            // Gets the receiver's balance by passing the value of the card number from the TextField to the Savings table database
                                            rs2 = ps2.executeQuery();
                                            if(rs2.next()){
                                                int balance_receiver = rs2.getInt(2); // Gets the user's balance
                                                int receiver_balance = balance_receiver + amount; // Updates the receiver's balance
                                                try {
                                                    ps1 = MyConnection.getConnection().prepareStatement(query1);
                                                    ps1.setInt(1, sender_balance); // Updates the balance of the account's balance in the Savings table database
                                                    ps1.setString(2, cardnum_sender); 

                                                    ps1.executeUpdate();
                                                    if(ps1.executeUpdate() > 0){
                                                        try{
                                                            ps1.setInt(1, receiver_balance); // Updates the balance of the receiver's balance in the Savings table database
                                                            ps1.setString(2, cardnum_receiver);
                                                            if(ps1.executeUpdate() > 0){ 
                                                                try{ 
                                                                    ps4 = MyConnection.getConnection().prepareStatement(query3);  
                                                                    // Insert the transaction to the History table database 
                                                                    ps4.setString(1, cardnum_sender); // Insert the sender's card number
                                                                    ps4.setString(2, cardnum_receiver); // Insert the receiver's card number
                                                                    ps4.setString(3, jTextField_Amount.getText()); // Insert the amount sent
                                                                    
                                                                    
                                                                    if(ps4.executeUpdate() > 0){
                                                                        JOptionPane.showMessageDialog(null, "Transfer Successful!"); 
                                                                        home hf = new home();
                                                                        hf.setVisible(true);
                                                                        hf.pack();
                                                                        hf.setLocationRelativeTo(null); 
                                                                        hf.jLabel_User.setText(jLabel2.getText());
                                                                        this.dispose(); 
                                                                        // After a successful transfer, the user will be directed to the home page, and the transfer page will be closed
                                                                    }
                                                                    
                                                                } catch(SQLException ex){
                                                                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                                                                }
                                                            }

                                                        } catch (SQLException ex){
                                                            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                                                        }

                                                    }


                                                } catch (SQLException ex) {
                                                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                                                }
                                            }

                                        } catch (SQLException ex){
                                            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                                        }





                                    }
                                    else{
                                        JOptionPane.showMessageDialog(null, "Oops an error has occureed.");
                                    }


                                } catch (SQLException ex) {
                                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } 
                            else{
                                JOptionPane.showMessageDialog(null, "Please enter a valid card number");
                            }
                        } catch(SQLException ex){
                            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex); 
                        }
                    } catch(SQLException ex){
                       Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex); 
                    }
                } catch(SQLException ex){
                    Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex); 
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Incorrect Password");
            }
        } catch (SQLException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_EnterMouseClicked

    private void jButton_EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EnterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_EnterActionPerformed

    private void jButton_CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_CancelMouseClicked
        // TODO add your handling code here:
        home hf = new home();
        hf.setVisible(true);
        hf.pack();
        hf.setLocationRelativeTo(null); 
        hf.jLabel_User.setText(jLabel2.getText());
        this.dispose();
    }//GEN-LAST:event_jButton_CancelMouseClicked

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jPasswordField_pwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_pwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField_pwActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Enter;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel_Amount;
    public javax.swing.JLabel jLabel_Amount1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JPasswordField jPasswordField_pw;
    public javax.swing.JTextField jTextField_Amount;
    public javax.swing.JTextField jTextField_CN;
    // End of variables declaration//GEN-END:variables
}
